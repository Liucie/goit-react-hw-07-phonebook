{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","services/contactsApi.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Form/ContactForm.js","components/Filter/Filter.js","components/Contacts/ContactsItem.js","components/Contacts/Contacts.js","App.js","index.js","components/Form/ContactForm.module.css"],"names":["module","exports","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","addContact","mutation","newContact","url","method","body","invalidatesTags","deleteContact","contactId","useGetContactsQuery","useDeleteContactMutation","useAddContactMutation","changeFilter","createAction","filterReducer","createReducer","_","payload","store","configureStore","reducer","middleware","getDefaultMiddleware","setupListeners","dispatch","ContactForm","useState","name","setName","phone","setPhone","contacts","data","reset","onSubmit","e","preventDefault","contact","some","el","toLowerCase","alert","className","s","form","label","type","value","pattern","title","required","onChange","currentTarget","input","button","Filter","useSelector","state","filter","useDispatch","target","ContactsItem","id","isDeleting","isLoading","onClick","color","height","width","Contacts","isFetching","list","includes","map","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b3c5dcf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__2S15D\",\"item\":\"Contacts_item__2vViX\",\"button\":\"Contacts_button__5wmo-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3BuMW\",\"input\":\"Filter_input__1BhsK\"};","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\n\r\nexport const contactsApi = createApi({\r\n    reducerPath: 'contactsApi',\r\n    baseQuery: fetchBaseQuery({ \r\n      baseUrl: 'https://61993c7b9022ea0017a7ade8.mockapi.io/'\r\n    }),\r\n    tagTypes: ['Contact'],\r\n    endpoints: (builder) => ({\r\n      getContacts: builder.query({\r\n        query: () => 'contacts',\r\n        providesTags: ['Contact'],\r\n      }),\r\n      addContact: builder.mutation({\r\n        query: newContact =>({\r\n          url: 'contacts',\r\n          method: 'POST',\r\n          body: newContact,\r\n        }),\r\n        invalidatesTags: ['Contact']\r\n      }),\r\n      deleteContact: builder.mutation({\r\n          query: contactId =>({\r\n            url: `contacts/${contactId}`,\r\n            method: 'DELETE',\r\n          }),\r\n          invalidatesTags:['Contact']\r\n      }),\r\n    }),\r\n  });\r\n\r\n  export const {useGetContactsQuery, useDeleteContactMutation, useAddContactMutation} = contactsApi;\r\n\r\n\r\n","\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\n\r\nexport const changeFilter = createAction('filter/change');\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { changeFilter } from \"./contacts-actions\";\r\n\r\n\r\n\r\nexport const filterReducer = createReducer('', {\r\n    [changeFilter]: ( _, {payload}) => payload,\r\n})\r\n","\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { setupListeners } from '@reduxjs/toolkit/query'\r\nimport { contactsApi } from \"../services/contactsApi\";\r\nimport { filterReducer } from \"./contacts/contacts-reducer\";\r\n\r\nexport const store = configureStore({\r\n    reducer:{\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n    filter: filterReducer},\r\n    middleware: getDefaultMiddleware => [\r\n        ...getDefaultMiddleware(),\r\n        contactsApi.middleware,\r\n    ],\r\n})\r\n\r\nsetupListeners(store.dispatch)\r\n","import { useState } from 'react';\nimport s from './ContactForm.module.css';\nimport { useAddContactMutation, useGetContactsQuery } from '../../services/contactsApi';\n\nexport default function ContactForm () {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n\n  const [addContact] = useAddContactMutation();\n  const { data : contacts } = useGetContactsQuery();\n \n\n  const handleNameChange = e => {\n    setName(e.currentTarget.value);\n  };\n  const handlePhoneChange = e => {\n    setPhone(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contact = {\n      name: name,\n      phone: phone,\n    };\n\n    if(contacts.some(el=> el.name.toLowerCase() === contact.name.toLowerCase())){\n     return alert(`${contact.name} is already in contacts`);\n    }\n  \n    addContact(contact);\n    reset();\n  };\n  const reset = () => {\n    setName ('');\n    setPhone('');\n  };\n    return (\n      <form onSubmit={handleSubmit} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleNameChange}\n            className={s.input}\n          />\n        </label>\n        <label className={s.label}>\n          Phone\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            value={phone}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handlePhoneChange}\n            className={s.input}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  \n    }\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport s from './Filter.module.css';\nimport {changeFilter} from '../../redux/contacts/contacts-actions';\n\nexport default function Filter() {\n  const value = useSelector((state) => state.filter);\n  const dispatch = useDispatch();\n  const onChange = e => dispatch(changeFilter(e.target.value));\n \n  return (\n    <div>\n      <label className={s.label}>Find contacts by name</label>\n      <input\n        type=\"tel\"\n        name=\"filter\"\n        value={value}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={onChange}\n        className={s.input}\n      />\n    </div>\n  );\n}\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string,\n};\n","import s from './Contacts.module.css';\r\nimport { useDeleteContactMutation } from '../../services/contactsApi';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n\r\nexport function ContactsItem({name,id, phone}){\r\n\r\n    const [deleteContact, {isLoading: isDeleting}] = useDeleteContactMutation();\r\n    return (\r\n    <>\r\n          {name}: {phone}\r\n          <button\r\n            onClick={()=>deleteContact(id)}\r\n            type=\"button\"\r\n            className={s.button}\r\n          >\r\n            {isDeleting ? <Loader type=\"ThreeDots\" color=\"#093a3e\" height={20} width={20}/> : 'Delete'}\r\n          </button>\r\n    </>\r\n        )\r\n    \r\n}","import s from './Contacts.module.css';\nimport Loader from 'react-loader-spinner';\nimport { ContactsItem } from './ContactsItem';\nimport { useGetContactsQuery } from '../../services/contactsApi';\nimport { useSelector } from 'react-redux';\n\n\n export default function Contacts() {\n   const {data, isFetching} = useGetContactsQuery();\n   const filter = useSelector((state => state.filter));\n\n  return (\n    <>\n    {isFetching && <Loader type=\"Puff\" color=\"#ff4f79\" height={40} width={40}/>}\n    {data && !isFetching && \n    <ul className={s.list}>\n      {data\n      .filter((contact)=> contact.name.toLowerCase().includes(filter.toLowerCase())\n      )\n      .map(({ name, id, phone }) => (\n        <li key = {id} className={s.item}> \n        <ContactsItem id= {id} name={name} phone={phone}> \n        </ContactsItem> </li>\n\n      ))}\n      </ul>\n }\n    </>\n  );\n}\n","import './App.css';\nimport  ContactForm  from './components/Form/ContactForm';\nimport Filter  from './components/Filter/Filter';\nimport  Contacts  from './components/Contacts/Contacts';\n;\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <Contacts />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport {store} from './redux/store'\nimport 'normalize.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1uJ2_\",\"label\":\"ContactForm_label__1p0Hg\",\"input\":\"ContactForm_input__VM9He\",\"button\":\"ContactForm_button__3kr12\"};"],"sourceRoot":""}